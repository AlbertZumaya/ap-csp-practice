// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tileGrass2], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex`1000100001020102020202010101010103030303010201020202020202020202010103030102010202020201010101020201010301020102020202020202010102020103010201010101010201020201010201030102020202020202010202020102010301020101010101010102020201020103010202020202020201020201010201030102010101010102010202010202010301020102020201020102020102010103010201010101010201020201020103030102020202010102010202010201030301020101010101020101010102010303010201030303010202020202020103030101010303030101010101010101030301030303030303030303030303030303`, img`
2 . 2 . . . . 2 2 2 2 2 . . . . 
2 . 2 . . . . . . . . . 2 2 . . 
2 . 2 . . . . 2 2 2 2 . . 2 2 . 
2 . 2 . . . . . . . 2 2 . . 2 . 
2 . 2 2 2 2 2 . 2 . . 2 2 . 2 . 
2 . . . . . . . 2 . . . 2 . 2 . 
2 . 2 2 2 2 2 2 2 . . . 2 . 2 . 
2 . . . . . . . 2 . . 2 2 . 2 . 
2 . 2 2 2 2 2 . 2 . . 2 . . 2 . 
2 . 2 . . . 2 . 2 . . 2 . 2 2 . 
2 . 2 2 2 2 2 . 2 . . 2 . 2 . . 
2 . . . . 2 2 . 2 . . 2 . 2 . . 
2 . 2 2 2 2 2 . 2 2 2 2 . 2 . . 
2 . 2 . . . 2 . . . . . . 2 . . 
2 2 2 . . . 2 2 2 2 2 2 2 2 . . 
2 . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.forestTiles10,sprites.castle.tilePath5,sprites.castle.tileGrass2], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex`1000100001010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tileGrass2], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
